Mar 27: Fixed the long list of c++ compile errors I got today, probably gonna work on re-factoring PC / NCP characters and parsing a file tomorrow. A lot of my variables are public, so it kind of defeats the purpose of classes, but all the assignment says is to port the program from C to C++. So, for now, I didn't make any getters and setters.

Mar 28: Reading in most of the data successfully. I think one file might be overflowing a buffer or something, because removing the array allows it to iterate through the whole file. Also, $HOME as an argument to my program seems to resolved automatically by the Linux terminal when I run the program? But the assignment says we are supposed to resolve it with getenv()? I don't know how to test this, because someone else's Linux environment might not resolve it automatically... the right "logic" in my code is being entered when $HOME is present, so I guess that will have to suffice for now.

I changed the pokemon_moves list to a pointer, and I'm getting to around ID 29 before it crashes. This is around 20,000 memory blocks of pokemon_moves objects. Even as a global pointer this is happening. Not sure if I'm overflowing memory or what's up.

Mar 29: I changed the data storage for the pokemon_moves method to just use a vector, so that I'm dynamically reallocating memory as I need it. So, it doesn't crash upon reading pokemon_moves.csv anymore. I'm just going to make empty subclasses NPC and PC, otherwise if I tried to declare both an NPC and PC movement 2-D array so the subclasses weren't pointless. I'd have to make methods to verify if an NPC can move somewhere the PC isn't, because NPCs are now in a different 2-D array than the PC. And vice versa. It also isn't really specified how to do the inheritence thing in the document either, so I'm not going to get too fancy with it.
